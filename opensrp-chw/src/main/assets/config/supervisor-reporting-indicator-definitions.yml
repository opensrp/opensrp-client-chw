indicators:
 - key: "supervisor_catchment_task_completion_rate"
    description: "Task Completion Rate for Entire Catchment Area"
    indicatorQuery: "SELECT count(DISTINCT ef.provider_id ) not_complete_task FROM schedule_service sc
                      INNER JOIN   ec_family_member efm ON sc.base_entity_id= efm.base_entity_id COLLATE NOCASE
                      INNER JOIN   ec_family ef ON efm.relational_id= ef.base_entity_id COLLATE NOCASE
                      AND sc.completion_date is NULL"

 - key: "supervisor_catchment_no_open_task_completion_rate"
     description: "Task Completion Rate for Entire Catchment Area"
     indicatorQuery: "SELECT (SELECT count(DISTINCT ef.provider_id) FROM ec_family ef)-
                      (SELECT count(DISTINCT ef.provider_id )  FROM schedule_service sc
                      INNER JOIN   ec_family_member efm ON sc.base_entity_id= efm.base_entity_id COLLATE NOCASE
                      INNER JOIN   ec_family ef ON efm.relational_id= ef.base_entity_id COLLATE NOCASE
                      AND sc.completion_date is NULL)count_chw_no_open_task"

 - key: "supervisor_synced_count"
    description: "Sync Completion Rate for Entire Catchment Area"
    indicatorQuery: "SELECT count(distinct json_extract(json, '$.providerId')) FROM event where syncStatus = 'Synced'"

  - key: "supervisor_unsynced_count"
    description: "Sync Not Completed Rate for Entire Catchment Area"
    indicatorQuery: "SELECT count(distinct json_extract(json, '$.providerId')) FROM event where syncStatus = 'Unsynced'"

  - key: "supervisor_households_with_open_tasks_for_month"
    description: "Households with open tasks remaining for the month by CHW"
    indicatorQuery: "SELECT f.provider_id as provider, (select count(distinct ecf.base_entity_id) from ec_family ecf where ecf.provider_id = f.provider_id and ecf.is_closed = 0)
                      as total_households, count(distinct f.base_entity_id) as count
                      FROM schedule_service sc INNER JOIN ec_family_member fm ON sc.base_entity_id = fm.base_entity_id
                      COLLATE NOCASE INNER JOIN ec_family f ON fm.relational_id = f.base_entity_id COLLATE NOCASE
                      WHERE (sc.completion_date IS NULL OR sc.completion_date = '') AND
                      f.is_closed = 0 AND fm.is_closed = 0
                      AND sc.created_at between  date('now', 'start of month') and date('now') GROUP BY provider"
    isMultiResult: true

  - key: "supervisor_incomplete_tasks_for_month"
    description: "Tasks remaining incomplete for the month by CHW"
    indicatorQuery: "SELECT
                     CASE WHEN sc.completion_date IS NULL THEN 'open_tasks'
                     ELSE 'closed_tasks' END tasks, f.provider_id as provider, count(distinct f.base_entity_id) as households, count(*)
                     FROM
                     schedule_service sc
                     INNER JOIN ec_family_member fm ON sc.base_entity_id = fm.base_entity_id COLLATE NOCASE
                     INNER JOIN ec_family f ON fm.relational_id = f.base_entity_id COLLATE NOCASE
                     WHERE f.is_closed = 0 AND fm.is_closed = 0 AND sc.created_at between  date('now', 'start of month') and date('now')
                    GROUP BY tasks, provider"
    isMultiResult: true

  - key: "supervisor_chw_last_sync"
    description: "CHW by date of last sync"
    indicatorQuery: "SELECT
                     json_extract(json, '$.providerId') as provider,
                     strftime('%Y-%m-%d',date(max(updatedAt))) as last_sync_date, count(*) as count
                     FROM event
                     where syncStatus = 'Synced'
                     group by provider
                     order by last_sync_date desc"
    isMultiResult: true